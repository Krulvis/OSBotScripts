package generalstoreseller.util;

import api.util.gui.GUIWrapper;
import generalstoreseller.GeneralStoreSeller;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.ArrayList;
import java.util.Properties;

/**
 * Created by s120619 on 2-3-2017.
 */
public class GUI extends GUIWrapper<GeneralStoreSeller> {

    private ArrayList<String> toSaveList = new ArrayList<>();

    public GUI(GeneralStoreSeller script) {
        super(script);
        construct(rootPanel);
        setSize(400, 400);
        startScriptButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                script.sellables = new SellableItems(script);
                SellableItems.restockAmount = Integer.parseInt(amountField.getText());
                for (int i = 0; i < GeneralStoreSeller.startSellables.length; i++) {
                    int id = GeneralStoreSeller.startSellables[i];
                    script.sellables.addSellable(new SellableItem(id, SellableItems.restockAmount, script));
                }
                script.restockWhenOneGone = restockWhenFirstItemCheckBox.isSelected();
                String text = customIdsField.getText();
                String[] newItems = text.split("/n");
                if (newItems.length > 0) {
                    for (int i = 0; i < newItems.length; i++) {
                        String item = newItems[i];
                        if (item != null && !item.equalsIgnoreCase("")) {
                            toSaveList.add(item);
                            int id = Integer.parseInt(item.contains(",") ? item.substring(0, item.indexOf(",")) : item);
                            int amount = item.contains(",") ? Integer.parseInt(item.substring(item.indexOf(",") + 1)) : SellableItems.restockAmount;
                            SellableItem si = new SellableItem(id, amount, script);
                            System.out.println("Added custom: " + si.getId() + ", " + si.getAmount());
                            script.sellables.addSellable(si);
                        }
                    }
                }
                save();
                setVisible(false);
                dispose();
                script.sellables.reCheckSellables();

            }
        });
        load();
        setVisible(true);
    }

    @Override
    public void loadSettings() {

    }

    @Override
    public void saveSettings() {
        try {
            Properties p = new Properties();
            p.setProperty("quick_restock", String.valueOf(restockWhenFirstItemCheckBox.isSelected()));
            if (toSaveList != null && toSaveList.size() > 0) {
                for (int i = 0; i < toSaveList.size(); i++) {
                    p.setProperty("item_" + i, String.valueOf(toSaveList.get(i)));
                }
            }
            p.setProperty("restock_amount", String.valueOf(amountField.getText()));
            p.store(new FileWriter(new File(getSettingsFile())), null);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void save() {

    }

    private void load() {
        try {
            Properties p = new Properties();
            p.load(new FileReader(new File(getSettingsFile())));
            StringBuilder text = new StringBuilder();
            boolean first = true;
            for (String key : p.stringPropertyNames()) {
                if (key.contains("item_")) {
                    if (!first) {
                        text.append("/n");
                    }
                    text.append(p.getProperty(key));
                    first = false;
                }
            }
            restockWhenFirstItemCheckBox.setSelected(Boolean.parseBoolean(p.getProperty("quick_restock", "false")));
            customIdsField.setText(text.toString());
            amountField.setText(p.getProperty("restock_amount", "200"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private JPanel rootPanel;
    private JTextField amountField;
    private JButton startScriptButton;
    private JTextArea customIdsField;
    private JCheckBox restockWhenFirstItemCheckBox;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Buy Amount:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        rootPanel.add(label1, gbc);
        amountField = new JTextField();
        amountField.setText("200");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 60;
        rootPanel.add(amountField, gbc);
        startScriptButton = new JButton();
        startScriptButton.setText("Start Script");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        rootPanel.add(startScriptButton, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Add More Custom IDs:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        rootPanel.add(label2, gbc);
        customIdsField = new JTextArea();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipady = 40;
        rootPanel.add(customIdsField, gbc);
        restockWhenFirstItemCheckBox = new JCheckBox();
        restockWhenFirstItemCheckBox.setText("Restock When First Item reacheas 0");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        rootPanel.add(restockWhenFirstItemCheckBox, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
